# 以808182为例
# 2>1，故个位为1的次数为80818+1=80819；
# 8>1，故十位为1的个数为80810+10=80820；
# 1==1，故百位为1的个数为80800+82+1=80983；
# 8>1，故千位为1的个数为80000+1000=81000；
# 0<1，故万位为1的个数为80000；
# 8>1，故十万位为1的个数为100000；
# 求和即得：503522

# "车锁"，求哪一位，将这一位锁为"1"

class Solution:
    def countDigitOne(self, n: int) -> int:
       # 算出每个位出现1的数量再累加
        res, num, i = 0, n, 1
        while num:
            bit = num % 10
            if bit > 1:
                res += (num // 10) * i + i
            elif bit == 1:
                res += (num // 10) * i + (n % i) + 1
            else:
                res += (num // 10) * i
            num //= 10
            i *= 10

        return res

            
